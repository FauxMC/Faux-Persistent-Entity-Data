plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id 'net.darkhax.curseforgegradle' version '1.0.11'
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

apply from: 'gradle/property_loader.gradle'
apply from: 'gradle/build_number.gradle'
apply from: 'gradle/git_changelog.gradle'

repositories {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {

    description = 'Publishes the build to CurseForge.'

    apiToken = System.getenv("CURSEFORGE_API_TOKEN")

    def mainFile = upload(575305, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
    mainFile.changelog = project.ext.mod_changelog
    mainFile.releaseType = 'release'
    mainFile.changelogType = 'markdown'
    def sourcesFile = mainFile.withAdditionalFile(sourcesJar)
    def javadocFile = mainFile.withAdditionalFile(javadocJar)
}

modrinth {
    token = System.getenv("MODRINTH_API_TOKEN")
    projectId = "E7ZFR7qk"
    versionNumber = "${version}"
    versionType = "release"
    uploadFile = remapJar
    dependencies {
        required.project "fabric-api"
    }
}
